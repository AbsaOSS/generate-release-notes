name: Check Release Notes in PR description

on:
  pull_request:
    types: [opened, synchronize, reopened, edited, labeled, unlabeled]
    branches: [ master ]

env:
  SKIP_LABEL: 'no RN'
  RLS_NOTES_TAG_REGEX: 'Release Notes:'

jobs:
  check-release-notes:
    runs-on: {your-runner}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Pull Request Info
        id: pr_info
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.payload.pull_request.number;
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number
            });
            const labels = pr.data.labels ? pr.data.labels.map(label => label.name) : [];

            if (labels.includes("${{ env.SKIP_LABEL }}")) {
              console.log("Skipping release notes check because '${{ env.SKIP_LABEL }}' label is present.");
              core.setOutput("skip_check", 'true');
              core.setOutput("pr_body", "");
              return;
            }

            const pr_body = pr.data.body;
            if (!pr_body) {
              core.setFailed("Pull request description is empty.");
              core.setOutput("pr_body", "");
              core.setOutput("skip_check", 'false');
              return;
            }
            core.setOutput("pr_body", pr_body);
            core.setOutput("skip_check", 'false');
            return;

      - name: Skip check if SKIP_LABEL is present
        if: steps.pr_info.outputs.skip_check == 'true'
        run: echo "Skipping release notes validation."

      - name: Check for 'Release Notes:' and bullet list
        if: steps.pr_info.outputs.skip_check == 'false'
        run: |
          # Extract the body from the previous step
          PR_BODY="${{ steps.pr_info.outputs.pr_body }}"

          # Check if "Release Notes:" exists
          if ! echo "$PR_BODY" | grep -q '${{ env.RLS_NOTES_TAG_REGEX }}'; then
            echo "Error: release notes tag not found in pull request description. Has to adhere to format '${{ env.RLS_NOTES_TAG_REGEX }}'."
            exit 1
          fi

          # Extract text after "Release Notes:" line
          TEXT_BELOW_RELEASE_NOTES_TAG=$(echo "$PR_BODY" | sed -n '/${{ env.RLS_NOTES_TAG_REGEX }}/,$p' | tail -n +2)

          # Check if there's a bullet list (lines starting with '-', '+' or '*')
          if ! echo "$TEXT_BELOW_RELEASE_NOTES_TAG" | grep -qE '^\s*[-+*]\s+.+$'; then
            echo "Error: No bullet list found under release notes tag."
            exit 1
          fi
