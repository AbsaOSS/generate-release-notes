#
# Copyright 2023 ABSA Group Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: 'Release notes scrapper'
description: 'Automatically generates release notes for a given release tag, categorized into chapters based on labels.'
inputs:
  tag-name:
    description: 'The tag name of the release to generate notes for.'
    required: true
  chapters:
    description: 'JSON string defining chapters and corresponding labels for categorization.'
    required: false
  published-at:
    description: 'Use `published-at` timestamp instead of `created-at` as the reference point of previous Release.'
    required: false
    default: 'false'
  skip-release-notes-label:
    description: 'Skip label used for detection of issues or pull requests to ignore in Release Notes generation process.'
    required: false
    default: 'skip-release-notes'
  warnings:
    description: 'Print service chapters if true.'
    required: false
    default: 'true'
  print-empty-chapters:
    description: 'Print chapters even if they are empty.'
    required: false
    default: 'true'
  chapters-to-pr-without-issue:
    description: 'Apply custom chapters for PRs without linked issues.'
    required: false
    default: 'true'
  verbose:
    description: 'Print verbose logs.'
    required: false
    default: 'false'
outputs:
  release-notes:
    description: 'Generated release notes.'
    value: ${{ steps.release-notes-generator.outputs.release-notes }}

branding:
  icon: 'book'
  color: 'yellow'

runs:
  using: 'composite'
  steps:
    # setup-python is not called as it is expected that it was done in the workflow that uses this action
    - name: Install Python dependencies
      run: |
        python_version=$(python --version 2>&1 | grep -oP '\d+\.\d+\.\d+')
        minimal_required_version="3.10.0"
        
        function version { echo "$@" | awk -F. '{ printf("%d%03d%03d\n", $1,$2,$3); }'; }
        
        echo "Current Python version: $python_version"
        echo "Minimal required Python version: $minimal_required_version"
        
        if [ $(version $python_version) -lt $(version $minimal_required_version) ]; then
          echo "Python version is less than $minimal_required_version"
          exit 1
        else
          echo "Python version meets the minimum requirement of $minimal_required_version"
        fi
        pip install -r ${{ github.action_path }}/requirements.txt
      shell: bash

    - name: Set PROJECT_ROOT and update PYTHONPATH
      run: |
        ACTION_ROOT="${{ github.action_path }}"
        export PYTHONPATH="${PYTHONPATH}:${ACTION_ROOT}/release_notes_generator"
      shell: bash

    - name: Call Release Notes Generator
      id: release-notes-generator
      env:
        INPUT_GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        INPUT_TAG_NAME: ${{ inputs.tag-name }}
        INPUT_CHAPTERS: ${{ inputs.chapters }}
        INPUT_WARNINGS: ${{ inputs.warnings }}
        INPUT_PUBLISHED_AT: ${{ inputs.published-at }}
        INPUT_SKIP_RELEASE_NOTES_LABEL: ${{ inputs.skip-release-notes-label }}
        INPUT_PRINT_EMPTY_CHAPTERS: ${{ inputs.print-empty-chapters }}
        INPUT_CHAPTERS_TO_PR_WITHOUT_ISSUE: ${{ inputs.chapters-to-pr-without-issue }}
        INPUT_VERBOSE: ${{ inputs.verbose }}
        INPUT_GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        python ${{ github.action_path }}/main.py
      shell: bash
