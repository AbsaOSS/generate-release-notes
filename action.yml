name: 'Release notes scrapper'
description: 'Automatically generates release notes for a given release tag, categorized into chapters based on labels.'
inputs:
  tag-name:
    description: 'The tag name of the release to generate notes for.'
    required: true
  chapters:
    description: 'JSON string defining chapters and corresponding labels for categorization.'
    required: false
  warnings:
    description: 'Print warning chapters if true.'
    required: false
    default: 'true'
  published-at:
    description: 'Use `published-at` timestamp instead of `created-at` as the reference point.'
    required: false
    default: 'false'
  skip-release-notes-label:
    description: 'Skip label used for detection of issues or pull requests to ignore in Release Notes generation process.'
    required: false
    default: 'skip-release-notes'
  print-empty-chapters:
    description: 'Print chapters even if they are empty.'
    required: false
    default: 'true'
  chapters-to-pr-without-issue:
    description: 'Apply custom chapters for PRs without linked issues.'
    required: false
    default: 'true'
  verbose:
    description: 'Print verbose logs.'
    required: false
    default: 'false'

branding:
  icon: 'book'
  color: 'yellow'

runs:
  using: 'composite'
  steps:
    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r ${{ github.action_path }}/requirements.txt
      shell: bash

    - name: Call command python3
      run: python3 --version
      shell: bash

    - name: print PYTHONPATH env variable
      run: echo $PYTHONPATH
      shell: bash

    - name: List all dirs in project - recursively
      run: ls ${{ github.action_path }} -R
      shell: bash

    - name: Call Release Notes Generator
      id: release-notes-generator
      env:
        INPUT_GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        INPUT_TAG_NAME: ${{ inputs.tag-name }}
        INPUT_CHAPTERS: ${{ inputs.chapters }}
        INPUT_WARNINGS: ${{ inputs.warnings }}
        INPUT_PUBLISHED_AT: ${{ inputs.published-at }}
        INPUT_SKIP_RELEASE_NOTES_LABEL: ${{ inputs.skip-release-notes-label }}
        INPUT_PRINT_EMPTY_CHAPTERS: ${{ inputs.print-empty-chapters }}
        INPUT_CHAPTERS_TO_PR_WITHOUT_ISSUE: ${{ inputs.chapters-to-pr-without-issue }}

        INPUT_GITHUB_REPOSITORY: ${{ github.repository }}

      run: |
        python3 ${{ github.action_path }}/src/release_notes_generator.py
      shell: bash
